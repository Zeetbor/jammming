{"ast":null,"code":"var _jsxFileName = \"/home/rob/codeAcademy/react/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport Spotify from '../../util/Spotify.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"Playlist 1\",\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  removeTrack(track) {\n    if (this.state.playlistTracks.filter(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  updatePlaylistName(name) {\n    return this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistNae, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Ja \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \" mmm \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            PlaylistName: this.state.playlistName,\n            PlaylistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/rob/codeAcademy/react/jammming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","find","savedTrack","id","filter","name","setState","trackUris","map","uri","playlistNae","then","searchTerm","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar.js'\nimport SearchResults from '../SearchResults/SearchResults.js'\nimport Playlist from '../Playlist/Playlist.js'\nimport Spotify from '../../util/Spotify.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"Playlist 1\",\n      playlistTracks: []\n    }\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  removeTrack(track) {\n    if (this.state.playlistTracks.filter(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  updatePlaylistName(name) {\n    return this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistNae, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    })\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div >\n        <h1> Ja <span className = \"highlight\" > mmm < /span>ing</h1 >\n      <div className = \"App\" >\n      <SearchBar onSearch={this.search}/>\n      <div className = \"App-playlist\" >\n      <SearchResults searchResults = {\n        this.state.searchResults\n      }\n      onAdd = {\n        this.addTrack\n      }/>\n      <Playlist\n      PlaylistName = {\n        this.state.playlistName\n      }\n      PlaylistTracks = {\n        this.state.playlistTracks\n      }\n      onRemove = {\n        this.removeTrack\n      }\n      onNameChange = {\n        this.updatePlaylistName\n      }\n      onSave = {\n        this.savePlaylist\n      }\n      /> <\n      /div> <\n      /div> <\n      /div>\n    )\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}