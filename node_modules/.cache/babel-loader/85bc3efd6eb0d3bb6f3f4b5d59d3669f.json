{"ast":null,"code":"var _jsxFileName = \"/home/rob/codeAcademy/react/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport Spotify from '../../util/Spotify.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"Playlist 1\",\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  removeTrack(track) {\n    if (this.state.playlistTracks.filter(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  updatePlaylistName(name) {\n    return this.state.playlistName = name;\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistNae, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            SearchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            PlaylistName: this.state.playlistName,\n            PlaylistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/rob/codeAcademy/react/jammming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","find","savedTrack","id","filter","name","trackUris","map","uri","playlistNae","then","setState","searchTerm","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar.js'\nimport SearchResults from '../SearchResults/SearchResults.js'\nimport Playlist from '../Playlist/Playlist.js'\nimport Spotify from '../../util/Spotify.js'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"Playlist 1\",\n      playlistTracks: []\n  }\n  this.addTrack = this.addTrack.bind(this);\n  this.removeTrack = this.removeTrack.bind(this);\n  this.updatePlaylistName = this.updatePlaylistName.bind(this);\n  this.savePlaylist = this.savePlaylist.bind(this);\n  this.search = this.search.bind(this);\n}\n\n  addTrack(track){\n    if(this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)){\n      return;\n    }\n  }\n\n  removeTrack(track){\n    if(this.state.playlistTracks.filter(savedTrack => savedTrack.id === track.id)){\n      return;\n    }\n  }\n\n  updatePlaylistName(name){\n    return this.state.playlistName = name;\n  }\n\n  savePlaylist(){\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistNae, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    })\n  }\n\n  search(searchTerm){\n    Spotify.search(searchTerm).then (searchResults => {\n      this.setState({searchResults: searchResults})\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search}/>\n          <div className=\"App-playlist\">\n            <SearchResults SearchResults={this.state.searchResults}  onAdd={this.addTrack}/>\n            <Playlist\n                      PlaylistName={this.state.playlistName}\n                      PlaylistTracks={this.state.playlistTracks}\n                      onRemove={this.removeTrack}\n                      onNameChange={this.updatePlaylistName}\n                      onSave={this.savePlaylist}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}