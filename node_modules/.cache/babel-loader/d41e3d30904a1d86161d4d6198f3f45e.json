{"ast":null,"code":"var _jsxFileName = \"/home/rob/codeAcademy/react/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport Spotify from '../../util/Spotify.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"Playlist 1\",\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  removeTrack(track) {\n    if (this.state.playlistTracks.filter(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  updatePlaylistName(name) {\n    return this.state.playlistName = name;\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistNae, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Ja \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \" mmm \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            SearchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Playlist, {\n            PlaylistName: this.state.playlistName,\n            PlaylistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 10\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 10\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/rob/codeAcademy/react/jammming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","find","savedTrack","id","filter","name","trackUris","map","uri","playlistNae","then","setState","searchTerm","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,YAAY,EAAE,YAFH;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,MAAL,GAAc,KAAKA,MAAL,CAAYJ,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDD,EAAAA,QAAQ,CAACM,KAAD,EAAQ;AACd,QAAI,KAAKV,KAAL,CAAWG,cAAX,CAA0BQ,IAA1B,CAA+BC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBH,KAAK,CAACG,EAArE,CAAJ,EAA8E;AAC5E;AACD;AACF;;AAEDP,EAAAA,WAAW,CAACI,KAAD,EAAQ;AACjB,QAAI,KAAKV,KAAL,CAAWG,cAAX,CAA0BW,MAA1B,CAAiCF,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBH,KAAK,CAACG,EAAvE,CAAJ,EAAgF;AAC9E;AACD;AACF;;AAEDN,EAAAA,kBAAkB,CAACQ,IAAD,EAAO;AACvB,WAAO,KAAKf,KAAL,CAAWE,YAAX,GAA0Ba,IAAjC;AACD;;AAEDP,EAAAA,YAAY,GAAG;AACb,UAAMQ,SAAS,GAAG,KAAKhB,KAAL,CAAWG,cAAX,CAA0Bc,GAA1B,CAA8BP,KAAK,IAAIA,KAAK,CAACQ,GAA7C,CAAlB;AACAvB,IAAAA,OAAO,CAACa,YAAR,CAAqB,KAAKR,KAAL,CAAWmB,WAAhC,EAA6CH,SAA7C,EAAwDI,IAAxD,CAA6D,MAAM;AACjE,WAAKC,QAAL,CAAc;AACZnB,QAAAA,YAAY,EAAE,cADF;AAEZC,QAAAA,cAAc,EAAE;AAFJ,OAAd;AAID,KALD;AAMD;;AAEDM,EAAAA,MAAM,CAACa,UAAD,EAAa;AACjB3B,IAAAA,OAAO,CAACc,MAAR,CAAea,UAAf,EAA2BF,IAA3B,CAAgCnB,aAAa,IAAI;AAC/C,WAAKoB,QAAL,CAAc;AACZpB,QAAAA,aAAa,EAAEA;AADH,OAAd;AAGD,KAJD;AAKD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,wBAAS;AAAA,8BAEP;AAAA,wCACQ;AAAO,UAAA,SAAS,EAAG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFO,eAIP;AACI,QAAA,SAAS,EAAG,KADhB;AAAA,gCAEA,QACA,SADA;AACU,UAAA,QAAQ,EAChB,KAAKd;AAFP;AAAA;AAAA;AAAA;AAAA,gBAFA,oBAMG;AACC,UAAA,SAAS,EAAG,cADb;AAAA,kCAEH,QACA,aADA;AACc,YAAA,aAAa,EACzB,KAAKT,KAAL,CAAWC,aAFb;AAIA,YAAA,KAAK,EACH,KAAKG;AALP;AAAA;AAAA;AAAA;AAAA,kBAFG,oBASA,QACH,QADG;AACM,YAAA,YAAY,EACnB,KAAKJ,KAAL,CAAWE,YAFV;AAIH,YAAA,cAAc,EACZ,KAAKF,KAAL,CAAWG,cALV;AAOH,YAAA,QAAQ,EACN,KAAKG,WARJ;AAUH,YAAA,YAAY,EACV,KAAKC,kBAXJ;AAaH,YAAA,MAAM,EACJ,KAAKC;AAdJ;AAAA;AAAA;AAAA;AAAA,kBATA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANH;AAAA;AAAA;AAAA;AAAA;AAAA,cAJO;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AAwCD;;AA1F+B;;AA2FjC;AAED,eAAeZ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar.js'\nimport SearchResults from '../SearchResults/SearchResults.js'\nimport Playlist from '../Playlist/Playlist.js'\nimport Spotify from '../../util/Spotify.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"Playlist 1\",\n      playlistTracks: []\n    }\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  removeTrack(track) {\n    if (this.state.playlistTracks.filter(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n  }\n\n  updatePlaylistName(name) {\n    return this.state.playlistName = name;\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistNae, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    })\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      })\n    })\n  }\n\n  render() {\n    return ( <\n      div >\n      <\n      h1 > Ja < span className = \"highlight\" > mmm < /span>ing</h1 >\n      <\n      div className = \"App\" >\n      <\n      SearchBar onSearch = {\n        this.search\n      }\n      /> <\n      div className = \"App-playlist\" >\n      <\n      SearchResults SearchResults = {\n        this.state.searchResults\n      }\n      onAdd = {\n        this.addTrack\n      }\n      /> <\n      Playlist PlaylistName = {\n        this.state.playlistName\n      }\n      PlaylistTracks = {\n        this.state.playlistTracks\n      }\n      onRemove = {\n        this.removeTrack\n      }\n      onNameChange = {\n        this.updatePlaylistName\n      }\n      onSave = {\n        this.savePlaylist\n      }\n      /> <\n      /div> <\n      /div> <\n      /div>\n    )\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}